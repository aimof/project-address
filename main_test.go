package main

import (
	"reflect"
	"testing"
)

func TestSearchAddress(t *testing.T) {
	testCases := []struct {
		input string
		want  []string
	}{
		{``, make([]string, 0, 40)},
		{"つくば市\n 茅場町 村々 郡山", []string{"つくば市", "茅場町", "村々", "郡山"}},
		{`つくば市天王台1丁目1-1
下田市5丁目10-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
南佐久郡南牧村野辺山   ru---
静岡市葵区井川1621-2
つくば市天王台1丁目1-1
上田市菅平高原1278-294
hoge foo bar
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1
つくば市天王台1丁目1-1`,
			[]string{
				"つくば市天王台1丁目1-1",
				"下田市5丁目10-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"南佐久郡南牧村野辺山",
				"静岡市葵区井川1621-2",
				"つくば市天王台1丁目1-1",
				"上田市菅平高原1278-294",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
				"つくば市天王台1丁目1-1",
			},
		},
	}
	for i, ts := range testCases {
		got := searchAddress(ts.input)
		if !reflect.DeepEqual(got, ts.want) {
			t.Errorf("case: %d\ngot:  %v\nwant: %v", i, got, ts.want)
		}
	}
}
